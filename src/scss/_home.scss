.main-block {
	background: url('../img/mainpage/main-block/bg.jpg') center / cover no-repeat;
	@include adaptiveValue('padding-top', 40, 40);
	@include adaptiveValue('padding-bottom', 60, 40);
	// background: $mainColor;
	// .main-block__container
	&__container {
	}
	// .main-block__body
	&__body {
		display: grid;
		align-items: start; //подняло "буллеты" в верх
		row-gap: rem(40);
		// grid-template-columns: 1fr percent(635, 1600); //percent -> mixin который вычисляет проценты (сколько процентов 635 от 1600) //~ a1
		&:not(:last-child) {
			@include adaptiveValue('margin-bottom', 43, 30);
		}
		@media (min-width: $tablet) {
			grid-template-columns: 1fr percent(635, 1600); //если шире планшета //~ a1
		}
	}
	// .main-block__slider
	&__slider {
		margin: 0 rem(-30); // срезалась часть тени кнопки пришлось добавить m-30 p30
		padding: 0 rem(30);
	}
	// .main-block__swiper
	&__swiper {
		&:not(:last-child) {
			margin-bottom: rem(30);
		}
	}
	// .main-block__slide
	&__slide {
	}
	// .main-block__media
	&__media {
	}
	// .main-block__advantages
	&__advantages {
	}
	// .main-block__controll
	&__controll {
	}
}
.controll-main-block {
	display: inline-grid;
	grid-auto-flow: column;
	align-items: center;
	gap: rem(20);
	// .controll-main-block__dotts
	&__dotts {
		display: inline-grid;
		grid-auto-flow: column;
		gap: rem(15);
		//! класс скопировал с отладчика Chrome, эти классы добавляются slider'ом автоматически (сколько слайдов столько и .swiper-pagination-bullet (вроде как они создаются в span))
		.swiper-pagination-bullet {
			//когда булет неактивный
			cursor: pointer;
			height: rem(30);
			width: rem(18);
			position: relative;
			transition: all 0.3s ease 0s;
			//! Прописал в after для того что бы увеличить область клика (удобнее для мобильных устройств)
			&::after {
				content: '';
				height: rem(2);
				width: 100%;
				top: 50%; //центрирую
				transform: translate(0px, -50%); //опускаю на 50% от ширины (так будет точно по центру)
				position: absolute;
				background-color: #fff;
			}
			&::before {
				//! рисую круг на булетах
				content: '';
				background-color: #e8aa31;
				width: rem(10);
				height: rem(10);
				top: 50%;
				left: 0; //!для анимации с лево на право ("1) - какие завязаны
				border-radius: 50%; //центрирую
				transform: translate(0px, -50%); //опускаю на 50% от ширины (так будет точно по центру)
				position: absolute;
				opacity: 0; //!скрываю круг opacity 1 в -> active -> before
			}
		}
		.swiper-pagination-bullet-active {
			//когда булет активный
			width: rem(36); //активный в 2 раза длинней
			&::after {
				//! Прописал цвет в after потому что увеличивал область клика (смотри выше)
				background-color: #e8aa31;
			}
			&::before {
				opacity: 1; //!тут
				transition: left 4s linear 0s; //!("2) //!!анимация работает только с left (linear - линейная анимация)
				left: rem(26); //!("3)
			}
			// !
		}
	}
	// .controll-main-block__fraction
	&__fraction {
	}
}
.fraction-controll {
	//!!! сод для счетчика в js->files->sliders.js -> //События оn:{...}
	display: flex;
	color: #fff;
	align-items: flex-end;
	font-weight: 600;
	letter-spacing: 0.2em; //расстояние между буквами
	// .fraction-controll__current
	&__current {
		color: #e8aa31;
		font-size: rem(24);
	}
	// .fraction-controll__all
	&__all {
		font-size: rem(18);
	}
}
.slide-main-block {
	// .slide-main-block__content
	&__content {
		color: #fff;
		// padding: 0 rem(40) 0 0; //этот отступ безопасности нужен на устройствах шире 992рх //~ a3
		@media (min-width: $tablet) {
			padding: 0 rem(40) 0 0; //~ a3
		}
		&:not(:last-child) {
			// отступ до кнопки "Подробнее"
			@include adaptiveValue('margin-bottom', 60, 30);
		}
	}
	// .slide-main-block__title
	&__title {
		font-weight: bold;
		letter-spacing: 0.03em;
		// font-size: rem(36); //~ a2
		@include adaptiveValue('font-size', 36, 22, 992, 320, 1); //адаптивно меняю шрифт от 36 до 22 начнет меняться от 992рх до 320рх //~ a2
		//! 46 <- В макете сайта, 36 величина шрифта (данное действие позволяет при изменении размера шрифта подстраивать сразу lin-height)
		line-height: math.div(46, 36);
		&:not(:last-child) {
			// not last-child - для того что бы, если объект останется 1 то margin-bottom  исчез.
			margin-bottom: em(15, 36); // отзывчивые единицы (экономят время). margin-bottom 15 <- В макете сайта 36 р-р шрифта
		}
	}
	// .slide-main-block__sub-title
	&__sub-title {
		// font-weight: 500; // прописано по умолчанию в style.scss
		&:not(:last-child) {
			margin-bottom: em(30, 36);
		}
		// font-size: rem(36);//~ a2
		@include adaptiveValue('font-size', 36, 22, 992, 320, 1); //~ a2
		line-height: math.div(46, 36);
	}
	// .slide-main-block__text
	&__text {
		color: rgba(255, 255, 255, 0.7);
		// font-size: rem(20); //~ a2
		@include adaptiveValue('font-size', 20, 16, 992, 320, 1); //~ a2
		line-height: math.div(30, 20);
	}
	// .slide-main-block__button
	&__button {
		// если мобильный то кнопка на всю ширину
		@media (max-width: $mobileSmall) {
			width: 100%;
		}
	}
}
.media-main-block {
	// центрирую медиа блок (с ножами в подставке)
	display: flex;
	justify-content: center;
	align-items: center;
	padding: rem(15); //отступы безопасности
	// .media-main-block__body
	&__body {
		position: relative;
	}
	// .media-main-block__image
	&__image {
		// position: relative;
		&::before {
			content: '';
			//! для того что бы круг менял размер вместе с картинкой, высчитываю его размеры в процентах
			width: percent(423, 449); //! тут
			padding-bottom: percent(423, 449); //!тут
			border-radius: 50%;
			border: 2px solid rgba(255, 255, 255, 0.5);
			position: absolute;
			bottom: 3.5%;
			right: 0;
			transform: translate(percent(131, 423), 0px); // высчитываю на сколько нужно сдвинуть круг в процентном соотношении (131px в макете 423 диаметр)
		}
		img {
			max-width: 100%; // при изменении размера экрана будет меняться размер картинки
			// обращаюсь к картинке для того чтобы ею закрыть часть круга
			position: relative;
			z-index: 2;
		}
	}
	// .media-main-block__tips
	&__tips {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		z-index: 5;
	}
	// .media-main-block__tip
	&__tip {
		width: rem(20);
		height: rem(20);
		position: absolute;
		cursor: pointer;
		transition: transform 0.3s ease 0s;
		@media (any-hover: hover) {
			&:hover {
				transform: rotate(-180deg);
			}
		}

		&::before,
		&::after {
			content: '';
			border-radius: 50%;
			background-color: #e8aa31;
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
		}
		&::after {
			transform: scale(1.6);
			opacity: 0.5;
		}
		span {
			position: relative;
			z-index: 2;
			color: #fff;
			font-weight: 600;
			font-size: rem(20);
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			display: flex;
			justify-content: center;
			align-items: center;
		}
		// .media-main-block__tip_1
		&_1 {
			//! Расположение "абсолютных" объектов нужно делать относительно -> в процентах, для того, что бы если объект (родитель) будет меняться по габаритам "абсолютные" объекты тоже будут менять свое расположение.
			// Размещаю "+", в процентном соотношении относительно габаритов картинки
			top: percent(186, 500); // 500 высота, 186 отступ от верхнего края
			left: percent(72, 447); // 447 ширина, 72 отступ от левого края
		}
		// .media-main-block__tip_2
		&_2 {
			top: percent(57, 500);
			right: percent(13, 447);
		}
		// .media-main-block__tip_3
		&_3 {
			bottom: percent(115, 500);
			right: percent(28, 447);
		}
	}
}

//! Иконки==============================
.advantages-main {
	display: grid;
	grid-template-columns: repeat(4, auto);
	gap: rem(20);
	justify-content: space-between; //потому что 2 крайних объекта прижаты к полям
	// .advantages-main__item
	@media (max-width: $tablet) {
		grid-template-columns: repeat(2, 1fr); //меняю сетку иконок //~ a4
		justify-items: center;
		row-gap: rem(30);
	}
	@media (max-width: $mobile) {
		grid-template-columns: repeat(1, 1fr); //меняю сетку иконок //~ a4
		justify-items: center;
		row-gap: rem(30);
	}
	&__item {
		display: inline-grid;
		gap: rem(17);
		text-align: center; // от центровались и иконки
		max-width: rem(290);
		grid-template-rows: rem(77) auto; // выравниваю текст под иконками (из за того что иконки разного размера текст то чуть выше то чуть ниже)
	}
	// .advantages-main__icon
	&__icon {
		align-self: center; // иконки по центру блока
	}
	// .advantages-main__text
	&__text {
		color: #fff;
		font-weight: 600;
		font-size: rem(16);
		line-height: math.div(32, 20);
	}
}
//! Карточки============================
// .page { //! Перенес в style.scss
// 	// .page__catalog-cards
// //	&__catalog-cards {
// 	}
// }
.catalog-cards {
	@include adaptiveValue('padding-top', 100, 40);
	@include adaptiveValue('padding-bottom', 70, 40);
	// .catalog-cards__container
	&__container {
		display: grid;
		gap: rem(30);
		@media (min-width:$mobileSmall) {
			grid-template-columns: repeat(auto-fit, minmax(rem(400), 1fr));//!адаптивные габариты контейнера			
		}
	}
	// .catalog-cards__item
	&__item {
	}
}
.item-catalog-cards {
	overflow: hidden;
	box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.15);
	position: relative;
	min-height: rem(290);
	transition: 	box-shadow 0.3s ease 0s;
	@media (any-hover:hover) {
		&:hover{
			box-shadow: 0px 4px 25px rgba(0, 0, 0, 0.25);
		}
	}
	// .item-catalog-cards__body
	&__body {
		position: relative;
		z-index: 2;
		@include adaptiveValue("padding", 30, 20)
		// 	//!!!! Если разрешение меньше мобильного то эти параметры будут работать если больше - то нет
		// //	&:not(:last-child){
		// //		margin-bottom: rem(20);// отступ от низа списка до картинки
		// //	}
		// //}
	}
	// .item-catalog-cards__title
	&__title {
		&:not(:last-child) {
			margin-bottom: em(30, 24);
		}
	}
	// .item-catalog-cards__link-title
	&__link-title {
		font-weight: 600;
		font-size: rem(24);
		line-height: math.div(34, 24); //!
		display: inline-block; //подчеркивание будет растягиваться на ширину блока, а не на весь экран
		&::after {
			content: '';
			width: rem(70);
			height: rem(2);
			display: block;
			margin: rem(15) 0px 0px 0px;
			background-color: #e8aa31;
			transition: width 0.8s ease 0s;
		}
		@media (any-hover: hover) {
			&:hover {
				&::after {
					width: 100%;
				}
			}
		}
	}
	// .item-catalog-cards__list
	&__list {
	}
	// .item-catalog-cards__item
	&__item {
		position: relative;
		padding: 0 0 0 rem(20);
		&::before {
			content: '';
			width: rem(6);
			height: rem(6);
			background-color: #e8aa31;
			border-radius: 50%;
			position: absolute;
			left: 0;
			top: em(8, 18);
		}
		&:not(:last-child) {
			margin-bottom: rem(10); // отступ кроме последнего
		}
	}
	// .item-catalog-cards__link
	&__link {
		font-size: rem(18);
		line-height: math.div(24, 18); //!!!!! ОДНО ОТСТУП ДРУГОЕ (либо высота блока, либо р-р текста) делится большее на меньшее
		@media (any-hover: hover) {
			&:hover {
				text-decoration: underline;
			}
		}
	}
	// .item-catalog-cards__image
	&__image {
		//! переместил в media для того что бы картинка была ниже текста при мобильном разрешении
		// position: absolute;
		// height: 100%;
		// top: 0;
		// right: 0;
		width: 100%;
		text-align: right;
		display: flex;
		justify-content: flex-end;
		align-items: flex-end;
		img {
			max-width: 100%;
		}
		@media (min-width: $mobileSmall) {
			//! сюда
			//!!!! Если разрешение больше мобильного то эти параметры будут работать если меньше - то нет
			position: absolute;
			height: 100%;
			top: 0;
			right: 0;
		}
	}
}
